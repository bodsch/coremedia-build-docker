/*
 * Copyright 2020-2021 Markus Schwarz, Martin Goellnitz for Provocon.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'com.palantir.docker' version '0.25.0' // https://github.com/palantir/gradle-docker
}

apply plugin: 'java-base'

/* Dummy configuration to be able to edit the wiki contents easily from within my IDE. */
sourceSets {
  main {
    resources {
      srcDir '.'
      exclude '*.gradle'
    }
  }
}

/* Transform string contents into a list. Useful to bring command lines into the internal gradle array format. */

private List<String> getCmd(String cmd) {
  List<String> result = new ArrayList<>(2)
  "$cmd".split(" ").each {
    result.add(it)
  }
  return result
}

/* The gradle-docker-plugin can not handle multiple Dockerfile's in one directory. So we have to help ourselves here. */
task buildBaseImage(type: Exec) {
  if (!project.hasProperty("buildTag"))
    throw new GradleException('!!! Please specify build version using => \$ gradle -PbuildTag=... !!!')
  println "************************"
  println "Using buildTag=$buildTag"
  println "************************"
  commandLine getCmd("docker build -f Dockerfile.alpine-docker-jdk11-maven3.8 -t provocon/alpine-docker-jdk11-maven3.8:latest .")
}

/* Build and push the final image to https://hub.docker.com/r/provocon/coremedia-build/tags with "gradle dockerPush" */
docker {
  name "provocon/coremedia-build:$buildTag"
}

docker.dependsOn buildBaseImage
